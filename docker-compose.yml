version: "3.9"
services:
  db:
    image: postgres:latest
    hostname: db
    #command: 'postgres -c max_connections=300 -c shared_buffers=96MB -c checkpoint_timeout=600 -c synchronous_commit=off -c fsync=off -c full_page_writes=off -c work_mem=16MB'
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=admin
      - POSTGRES_DB=rinha
      - DATABASE_HOST=db
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d rinha"]
      interval: 15s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    volumes:
      - ./sql/0_init.sql:/docker-entrypoint-initdb.d/0_init.sql
      - ./sql/1_functions.sql:/docker-entrypoint-initdb.d/1_functions.sql
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '256MB'
  api1: &api
    image: luizvnasc/rinha_backend_2024_q1
    hostname: api1
    environment:
      - PORT=3000
      - POSTGRES_DSN=host=db user=admin password=123 dbname=rinha port=5432 sslmode=disable TimeZone=Europe/Lisbon
    ports:
      - 3000:3000
    depends_on:
      db:
        condition: service_healthy
    ulimits:
      nofile:
          soft: 1000000
          hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '80MB'
  api2:
    <<: *api
    hostname: api2
    environment:
      - PORT=3001
      - POSTGRES_DSN=host=db user=admin password=123 dbname=rinha port=5432 sslmode=disable TimeZone=Europe/Lisbon
    ports:
      - 3001:3001
  load-balancer:
    image: nginx
    volumes:
    - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
    - 9999:9999
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '134MB'

networks:
  default:
    driver: bridge
    name: rinha-backend-2024q1
    external: true